/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Inventario as PrismaInventario } from "@prisma/client";

export class InventarioServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InventarioCountArgs, "select">
  ): Promise<number> {
    return this.prisma.inventario.count(args);
  }

  async inventarios(
    args: Prisma.InventarioFindManyArgs
  ): Promise<PrismaInventario[]> {
    return this.prisma.inventario.findMany(args);
  }
  async inventario(
    args: Prisma.InventarioFindUniqueArgs
  ): Promise<PrismaInventario | null> {
    return this.prisma.inventario.findUnique(args);
  }
  async createInventario(
    args: Prisma.InventarioCreateArgs
  ): Promise<PrismaInventario> {
    return this.prisma.inventario.create(args);
  }
  async updateInventario(
    args: Prisma.InventarioUpdateArgs
  ): Promise<PrismaInventario> {
    return this.prisma.inventario.update(args);
  }
  async deleteInventario(
    args: Prisma.InventarioDeleteArgs
  ): Promise<PrismaInventario> {
    return this.prisma.inventario.delete(args);
  }
}
