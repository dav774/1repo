/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Venta as PrismaVenta } from "@prisma/client";

export class VentaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.VentaCountArgs, "select">): Promise<number> {
    return this.prisma.venta.count(args);
  }

  async ventas(args: Prisma.VentaFindManyArgs): Promise<PrismaVenta[]> {
    return this.prisma.venta.findMany(args);
  }
  async venta(args: Prisma.VentaFindUniqueArgs): Promise<PrismaVenta | null> {
    return this.prisma.venta.findUnique(args);
  }
  async createVenta(args: Prisma.VentaCreateArgs): Promise<PrismaVenta> {
    return this.prisma.venta.create(args);
  }
  async updateVenta(args: Prisma.VentaUpdateArgs): Promise<PrismaVenta> {
    return this.prisma.venta.update(args);
  }
  async deleteVenta(args: Prisma.VentaDeleteArgs): Promise<PrismaVenta> {
    return this.prisma.venta.delete(args);
  }
}
