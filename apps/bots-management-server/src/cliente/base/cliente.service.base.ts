/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Cliente as PrismaCliente } from "@prisma/client";

export class ClienteServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ClienteCountArgs, "select">): Promise<number> {
    return this.prisma.cliente.count(args);
  }

  async clientes(args: Prisma.ClienteFindManyArgs): Promise<PrismaCliente[]> {
    return this.prisma.cliente.findMany(args);
  }
  async cliente(
    args: Prisma.ClienteFindUniqueArgs
  ): Promise<PrismaCliente | null> {
    return this.prisma.cliente.findUnique(args);
  }
  async createCliente(args: Prisma.ClienteCreateArgs): Promise<PrismaCliente> {
    return this.prisma.cliente.create(args);
  }
  async updateCliente(args: Prisma.ClienteUpdateArgs): Promise<PrismaCliente> {
    return this.prisma.cliente.update(args);
  }
  async deleteCliente(args: Prisma.ClienteDeleteArgs): Promise<PrismaCliente> {
    return this.prisma.cliente.delete(args);
  }
}
