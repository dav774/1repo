/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentIntent as PrismaPaymentIntent,
  Invoice as PrismaInvoice,
} from "@prisma/client";

export class PaymentIntentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentIntentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentIntent.count(args);
  }

  async paymentIntents(
    args: Prisma.PaymentIntentFindManyArgs
  ): Promise<PrismaPaymentIntent[]> {
    return this.prisma.paymentIntent.findMany(args);
  }
  async paymentIntent(
    args: Prisma.PaymentIntentFindUniqueArgs
  ): Promise<PrismaPaymentIntent | null> {
    return this.prisma.paymentIntent.findUnique(args);
  }
  async createPaymentIntent(
    args: Prisma.PaymentIntentCreateArgs
  ): Promise<PrismaPaymentIntent> {
    return this.prisma.paymentIntent.create(args);
  }
  async updatePaymentIntent(
    args: Prisma.PaymentIntentUpdateArgs
  ): Promise<PrismaPaymentIntent> {
    return this.prisma.paymentIntent.update(args);
  }
  async deletePaymentIntent(
    args: Prisma.PaymentIntentDeleteArgs
  ): Promise<PrismaPaymentIntent> {
    return this.prisma.paymentIntent.delete(args);
  }

  async getInvoice(parentId: string): Promise<PrismaInvoice | null> {
    return this.prisma.paymentIntent
      .findUnique({
        where: { id: parentId },
      })
      .invoice();
  }
}
