/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Usuario as PrismaUsuario } from "@prisma/client";

export class UsuarioServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UsuarioCountArgs, "select">): Promise<number> {
    return this.prisma.usuario.count(args);
  }

  async usuarios(args: Prisma.UsuarioFindManyArgs): Promise<PrismaUsuario[]> {
    return this.prisma.usuario.findMany(args);
  }
  async usuario(
    args: Prisma.UsuarioFindUniqueArgs
  ): Promise<PrismaUsuario | null> {
    return this.prisma.usuario.findUnique(args);
  }
  async createUsuario(args: Prisma.UsuarioCreateArgs): Promise<PrismaUsuario> {
    return this.prisma.usuario.create(args);
  }
  async updateUsuario(args: Prisma.UsuarioUpdateArgs): Promise<PrismaUsuario> {
    return this.prisma.usuario.update(args);
  }
  async deleteUsuario(args: Prisma.UsuarioDeleteArgs): Promise<PrismaUsuario> {
    return this.prisma.usuario.delete(args);
  }
}
